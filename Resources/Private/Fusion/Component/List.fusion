prototype(Breadlesscode.Listable:List) < prototype(Neos.Fusion:Component) {
    collection = ${ [] }
    itemsPerPage = 10 # deprecated please use limit instead
    limit = ${ this.itemsPerPage }
    itemRenderer = 'Breadlesscode.Listable:ListItem'
    itemName = ${ 'item' }
    paginated = ${ true }
    paginationConfig = Breadlesscode.Listable:PaginationConfig

    @context.currentPage = ${ request.arguments.currentPage || 1 }

    renderer = Neos.Fusion:Join {
        @context.collection = Neos.Fusion:DataStructure {
            items = Breadlesscode.Listable:Collection {
                collection = ${ props.collection }
                currentPage = ${ currentPage }
                limit = ${ props.limit }
                paginate = ${ props.paginated }
            }
            totalCount = ${ Type.getType(props.collection) == 'array' ? q(props.collection).count() : props.collection.count() }
        }
        list = Neos.Fusion:Collection {
            collection = ${ collection.items }
            itemName = ${ props.itemName }
            itemRenderer = Neos.Fusion:Renderer {
                type = ${ props.itemRenderer }
            }
        }
        pagination = Breadlesscode.Listable:Pagination {
            currentPage = ${ currentPage }
            maximumNumberOfLinks = ${ 3 }
            totalCount = ${ collection.totalCount }
            itemsPerPage = ${ props.limit }
            paginationConfig = ${ props.paginationConfig }

            @if.shouldPaginate = ${ props.paginated }
        }
    }
}
